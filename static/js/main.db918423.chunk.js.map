{"version":3,"sources":["components/UserNameForm.js","components/OnlineUsers.js","components/RoomList.js","components/Message.js","components/TypingIndicator.js","components/MessageList.js","components/SendMessageForm.js","components/NewRoomForm.js","components/ChatScreen.js","config.js","App.js","serviceWorker.js","index.js"],"names":["UserNameForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","onSubmit","bind","assertThisInitialized","onChange","e","preventDefault","setState","target","value","react_default","a","createElement","type","placeholder","Component","OnlineUsers","users","map","user","index","id","currentUser","OnlineUsers_WhosOnlineListItem","key","presenceState","name","presence","renderUsers","WhosOnlineListItem","styles","li","display","alignItems","marginTop","marginBottom","paddingTop","paddingBottom","div","borderRadius","width","height","marginRight","style","objectSpread","backgroundColor","children","RoomList","orderedRooms","toConsumableArray","rooms","sort","b","loading","className","room","active","roomId","onClick","subscribeToRoom","href","components_OnlineUsers","React","Message","text","TypingIndicator","TypingUsers","length","join","MessageList","node","ReactDOM","findDOMNode","shouldScrollToBottom","scrollTop","clientHeight","scrollHeight","messages","message","components_Message","senderId","components_TypingIndicator","SendMessageForm","textMessage","handleChange","handleSubmit","event","_event$target","defineProperty","sendMessage","disabled","NewRoomForm","roomName","createRoom","required","ChatScreen","currentRoom","joinableRooms","joinedRooms","usersWhoStartedTyping","getRooms","sendTypingEvent","_this2","ChatKit","ChatManager","instanceLocator","userId","currentUsername","tokenProvider","TokenProvider","url","connect","then","catch","err","console","log","_this3","getJoinableRooms","_this4","messageLimit","hooks","onMessage","concat","onUserStartedTyping","onUserStoppedTyping","filter","onUserLeftRoom","forceUpdate","onUserJoinedRoom","onPresenceChanged","isTypingIn","error","_this5","components_RoomList","components_MessageList","components_SendMessageForm","components_NewRoomForm","App","currentScreen","onUsernameSubmitted","fetch","method","headers","Content-Type","body","JSON","stringify","response","components_UserNameForm","components_ChatScreen","Boolean","window","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db918423.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass UserNameForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n    }\r\n    this.onSubmit = this.onSubmit.bind(this)\r\n    this.onChange = this.onChange.bind(this)\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.onSubmit(this.state.username)\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ username: e.target.value })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>What is your username?</h2>\r\n          <form onSubmit={this.onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Your name\"\r\n              onChange={this.onChange}\r\n            />\r\n            <input type=\"submit\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserNameForm","\r\nimport React, { Component } from 'react'\r\n\r\nclass OnlineUsers extends Component {\r\n  renderUsers() {\r\n    return (\r\n      <ul>\r\n        {this.props.users.map((user, index) => {\r\n          if (user.id === this.props.currentUser.id) {\r\n            return (\r\n              <WhosOnlineListItem key={index} presenceState=\"online\">\r\n                {user.name} (You)\r\n              </WhosOnlineListItem>\r\n            )\r\n          }\r\n          return (\r\n            <WhosOnlineListItem key={index} presenceState={user.presence.state}>\r\n              {user.name}\r\n            </WhosOnlineListItem>\r\n          )\r\n        })}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if (this.props.users) {\r\n      return this.renderUsers()\r\n    } else {\r\n      return <p>Loading...</p>\r\n    }\r\n  }\r\n}\r\n\r\nclass WhosOnlineListItem extends Component {\r\n  render() {\r\n    const styles = {\r\n      li: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        paddingTop: 2,\r\n        paddingBottom: 2,\r\n      },\r\n      div: {\r\n        borderRadius: '50%',\r\n        width: 11,\r\n        height: 11,\r\n        marginRight: 10,\r\n      },\r\n    }\r\n    return (\r\n      <li style={styles.li}>\r\n        <div\r\n          style={{\r\n            ...styles.div,\r\n            backgroundColor:\r\n              this.props.presenceState === 'online' ? '#539eff' : '#414756',\r\n          }}\r\n        />\r\n        {this.props.children}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OnlineUsers","import React from 'react'\r\nimport OnlineUsers from './OnlineUsers'\r\n\r\nclass RoomList extends React.Component {\r\n\r\n    render() {\r\n        const orderedRooms = [...this.props.rooms].sort((a, b) => a.id - b.id)\r\n        const loading = \"Loading...\"\r\n        while (this.props.loading) {\r\n            return loading\r\n        }\r\n        return (\r\n\r\n            <div className=\"rooms-list\">\r\n                <ul>\r\n\r\n                    <h3>Your Rooms</h3>\r\n                    {orderedRooms.map(room => {\r\n                        const active = this.props.roomId === room.id ? \" active\" : \"\";\r\n                        return (\r\n                            <li key={room.id} className={\"room\" + active}>\r\n                                <a onClick={() => this.props.subscribeToRoom(room.id)} href=\"#\"># {room.name} </a>\r\n                            </li>\r\n\r\n                        )\r\n                    })}\r\n\r\n                </ul>\r\n\r\n\r\n                <div className=\"online\">\r\n                    <h3>Chat Members</h3>\r\n                    <OnlineUsers users={this.props.users} currentUser={this.props.currentUser} />\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\nexport default RoomList","import React from 'react'\r\n\r\nfunction Message (props) {\r\n    // console.log(props)\r\n    return (\r\n        <div className=\"message\">\r\n            <div className=\"message-username\">{props.username}</div>\r\n            <div className=\"message-text\">{props.text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\n\r\nclass TypingIndicator extends React.Component {\r\n    render() {\r\n        // console.log(this.props)\r\n        if(this.props.TypingUsers.length === 0) {\r\n            return <div />\r\n        }\r\n        else if (this.props.TypingUsers.length === 1) {\r\n            return <p className=\"typing-indicator\">{this.props.TypingUsers[0]} is typing...</p>\r\n        }\r\n        else if (this.props.TypingUsers.length > 1) {\r\n            if(this.props.TypingUsers[0] === this.props.TypingUsers[1])\r\n            {\r\n                return <p>{this.props.TypingUsers[0]} is typing...</p>\r\n            }\r\n            else {\r\n                return <p>{this.props.TypingUsers.join(' and ')} are typing...</p>\r\n            }\r\n            \r\n        }\r\n    }\r\n}\r\nexport default TypingIndicator","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Message from './Message'\r\nimport TypingIndicator from './TypingIndicator'\r\n\r\n\r\n\r\n\r\nclass MessageList extends React.Component {\r\n\r\n    componentWillUpdate() {\r\n        const node = ReactDOM.findDOMNode(this)\r\n        /* \r\n        scrollTop: how far we've scrolled \r\n        clientHeight: height of window\r\n        scrollHeight: height of entire element(message list)\r\n        */\r\n        // console.log(node.scrollTop, node.clientHeight, node.scrollHeight)\r\n        this.shouldScrollToBottom = node.scrollTop + node.clientHeight + 200 >= node.scrollHeight\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.shouldScrollToBottom) {\r\n            const node = ReactDOM.findDOMNode(this)\r\n            node.scrollTop = node.scrollHeight\r\n        }\r\n\r\n    }\r\n    render() {\r\n        // console.log(this.props)\r\n        if (!this.props.roomId) {\r\n            return (\r\n                <div className=\"message-list\">\r\n                    <h1 className=\"welcome\">Welcome&nbsp;{this.props.username}</h1>\r\n                    <div className=\"join-room\">\r\n                        Join a room! &rarr;\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n          \r\n                \r\n                <div className=\"message-list\">\r\n                    {this.props.messages.map((message, index) => {\r\n                        return (\r\n                            <Message key={index} username={message.senderId} text={message.text} />\r\n                        )\r\n                    })}\r\n                    <TypingIndicator TypingUsers={this.props.TypingUsers} />\r\n                </div>\r\n                \r\n\r\n          \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList","import React from 'react'\r\n\r\nclass SendMessageForm extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            textMessage: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        this.props.onChange()\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        // console.log(this.state.textMessage)\r\n        this.props.sendMessage(this.state.textMessage)\r\n        this.setState({\r\n            textMessage: ''\r\n        })\r\n    }\r\n    render() {\r\n        // console.log(this.state.textMessage)\r\n        return (\r\n            <form \r\n                className=\"send-message-form\"\r\n                onSubmit={this.handleSubmit}\r\n            >\r\n                <input\r\n                    disabled={this.props.disabled}\r\n                    placeholder=\"Type a message...\"\r\n                    type=\"text\"\r\n                    name=\"textMessage\"\r\n                    value={this.state.textMessage}\r\n                    onChange={this.handleChange}\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendMessageForm","import React from 'react'\r\n\r\nclass NewRoomForm extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            roomName: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            roomName: event.target.value\r\n        })\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        this.props.createRoom(this.state.roomName)\r\n        this.setState({roomName: ''})\r\n    }\r\n    render () {\r\n        return (\r\n            <div className=\"new-room-form\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        value={this.state.roomName}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\" \r\n                        placeholder=\"Create a room\" \r\n                        required />\r\n                    <button id=\"create-room-btn\" type=\"submit\">+</button>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewRoomForm","import React, { Component } from 'react';\r\nimport './../App.css';\r\nimport RoomList from './RoomList'\r\nimport MessageList from './MessageList'\r\nimport SendMessageForm from './SendMessageForm'\r\nimport NewRoomForm from './NewRoomForm'\r\nimport { tokenUrl, instanceLocator } from '../config'\r\nimport ChatKit from '@pusher/chatkit-client'\r\n\r\nclass ChatScreen extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      currentUser: {},\r\n      currentRoom: {},\r\n      loading: null,\r\n      roomId: null,\r\n      messages: [],\r\n      joinableRooms: [],\r\n      joinedRooms: [],\r\n      usersWhoStartedTyping: [],\r\n    }\r\n    this.sendMessage = this.sendMessage.bind(this)\r\n    this.subscribeToRoom = this.subscribeToRoom.bind(this)\r\n    this.getRooms = this.getRooms.bind(this)\r\n    this.createRoom = this.createRoom.bind(this)\r\n    this.sendTypingEvent = this.sendTypingEvent.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({loading: true})\r\n    const chatManager = new ChatKit.ChatManager({\r\n      instanceLocator,\r\n      userId: this.props.currentUsername,\r\n      tokenProvider: new ChatKit.TokenProvider({\r\n        url: tokenUrl\r\n      })\r\n\r\n    })\r\n\r\n    chatManager.connect()\r\n      .then(currentUser => {\r\n        this.setState({currentUser})\r\n        this.currentUser = currentUser\r\n        this.getRooms()\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n      .catch(err => console.log('error on joinableRooms: ', err))\r\n      \r\n    \r\n  }\r\n\r\n  getRooms() {\r\n    this.currentUser.getJoinableRooms()\r\n          .then(joinableRooms =>{\r\n            this.setState({\r\n              joinableRooms,\r\n              joinedRooms: this.currentUser.rooms\r\n            })\r\n          })\r\n        .catch(err => console.log('error on joinableRooms: ', err))\r\n  }\r\n\r\n  subscribeToRoom(roomId) {\r\n    this.setState({\r\n      messages: []\r\n    })\r\n    // console.log(this.currentUser)\r\n    this.currentUser.subscribeToRoom({\r\n      roomId: roomId,\r\n      messageLimit: 20,\r\n      hooks: {\r\n        onMessage: message => {\r\n          // console.log(\"Received message:\", message.text)\r\n          this.setState({\r\n            messages: [...this.state.messages, message]\r\n          })\r\n        },\r\n        onUserStartedTyping: user => {\r\n          // console.log(user.name,'started typing...')\r\n          this.setState({\r\n            usersWhoStartedTyping: [...this.state.usersWhoStartedTyping, user.name]\r\n          })\r\n        },\r\n        onUserStoppedTyping: user => {\r\n          this.setState({\r\n            usersWhoStartedTyping: this.state.usersWhoStartedTyping.filter(\r\n              \r\n              username => username !== user.name\r\n            )\r\n          })\r\n        },\r\n        onUserLeftRoom: () => this.forceUpdate(),\r\n        onUserJoinedRoom: () => this.forceUpdate(),\r\n        onPresenceChanged: () => this.forceUpdate(),\r\n      }\r\n    })\r\n    .then(room => {\r\n      this.setState({\r\n        currentRoom: room,\r\n        roomId: room.id\r\n      })\r\n      this.getRooms()\r\n    })\r\n    .catch(err => console.log('error on subscribing to room: ',err))\r\n  }\r\n  \r\n\r\n  sendMessage(text) {\r\n    this.currentUser.sendMessage({\r\n      text: text,\r\n      roomId: this.state.roomId\r\n    })\r\n  }\r\n\r\n  sendTypingEvent() {\r\n    // console.log(this.currentUser)\r\n    this.currentUser \r\n    .isTypingIn({roomId: this.state.roomId})\r\n    .catch(error => console.error('error',error))\r\n  }\r\n\r\n  createRoom(name) {\r\n    this.currentUser.createRoom({\r\n      name\r\n    })\r\n    .then(room => this.subscribeToRoom(room.id))\r\n    .catch(err => console.log(\"error on createRoom\",err))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <RoomList \r\n          loading={this.state.loading}\r\n          roomId={this.state.roomId}\r\n          subscribeToRoom={this.subscribeToRoom} \r\n          rooms={[...this.state.joinableRooms,...this.state.joinedRooms]}\r\n          users={this.state.currentRoom.users}\r\n          currentUser={this.state.currentUser}\r\n        />\r\n        <MessageList \r\n          messages={this.state.messages}\r\n          roomId={this.state.roomId}\r\n          username={this.props.currentUsername}\r\n          TypingUsers={this.state.usersWhoStartedTyping}\r\n          users={this.state.currentRoom.users}\r\n        />\r\n        <SendMessageForm \r\n          sendMessage={this.sendMessage}\r\n          disabled={!this.state.roomId}\r\n          onChange={this.sendTypingEvent}\r\n        />\r\n        <NewRoomForm createRoom={this.createRoom}/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatScreen;\r\n","const tokenUrl = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/a781f6d8-0b24-4595-9747-1f433a69991b/token\"\r\nconst instanceLocator = \"v1:us1:a781f6d8-0b24-4595-9747-1f433a69991b\"\r\n\r\nexport {tokenUrl, instanceLocator}","import React, { Component } from 'react'\nimport UserNameForm from './components/UserNameForm'\nimport ChatScreen from './components/ChatScreen'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state= {\n      currentUsername: '',\n      currentScreen: 'WhatIsYourUsernameScreen',\n    }\n    this.onUsernameSubmitted = this.onUsernameSubmitted.bind(this)\n  }\n\n  onUsernameSubmitted(username) {\n    fetch('http://localhost:3001/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username }),\n    })\n      .then(response => {\n        this.setState({\n          currentUsername: username,\n          currentScreen: 'ChatScreen',\n        })\n      })\n      .catch(error => console.error('error', error))\n  }\n\n\n\n  render() {\n    // return <UsernameForm onSubmit={this.onUsernameSubmitted}/>\n    if (this.state.currentScreen === 'WhatIsYourUsernameScreen') {\n      return <UserNameForm onSubmit={this.onUsernameSubmitted} />\n    }\n    if (this.state.currentScreen === 'ChatScreen') {\n      return <ChatScreen currentUsername={this.state.currentUsername} />\n    }\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}